{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ver",
				"version_major"
			],
			[
				"data",
				"data_notationios_info_plist_result"
			],
			[
				"new",
				"new_line"
			],
			[
				"version",
				"version_to_replace"
			],
			[
				"isK",
				"is_key_found_this_time"
			],
			[
				"komp",
				"data_komp_info_plist"
			],
			[
				"Draw",
				"DrawResult"
			],
			[
				"DrawRe",
				"DrawResultCache"
			],
			[
				"inDra",
				"inDrawPoint"
			],
			[
				"Drawab",
				"DrawableUPtr"
			],
			[
				"appl",
				"applyJustification"
			],
			[
				"Dra",
				"DrawableLine"
			],
			[
				"inUn",
				"inUnscaledScoreY"
			],
			[
				"unsca",
				"unscaledScoreY"
			],
			[
				"unscaled",
				"unscaledScoreX"
			],
			[
				"Spatial",
				"SpatialPointIntf"
			],
			[
				"Spatia",
				"SpatialPointIntf"
			],
			[
				"Key",
				"KeySignatureType"
			],
			[
				"KeySign",
				"KeySignatureType"
			],
			[
				"It",
				"ItemRegistry"
			],
			[
				"Harp",
				"Harpsichord"
			],
			[
				"Vib",
				"Vibraphone"
			],
			[
				"mBeat",
				"mBeatTypeDots"
			],
			[
				"BeamAngIn",
				"BeamAngleIntfUPtr"
			],
			[
				"getBeamedNote",
				"getBeamedNoteCount"
			],
			[
				"BeamedN",
				"BeamedNoteIntfUPtrVec"
			],
			[
				"Measure",
				"MeasureAttachedDynamicParams"
			],
			[
				"Octave",
				"OctaveType"
			],
			[
				"MxNote",
				"MxNoteSpannerStack"
			],
			[
				"MxNotre",
				"MxNoteSpannerPtr"
			],
			[
				"fontFamil",
				"fontFamilyData"
			],
			[
				"my",
				"myScoreDataCreator"
			],
			[
				"expected",
				"expectedOctave"
			],
			[
				"PartwiseMe",
				"PartwiseMeasurePtr"
			],
			[
				"QUARTER_",
				"QUARTER_FLAT"
			],
			[
				"SHAR",
				"SHARP_SHARP"
			],
			[
				"DOUBLE_",
				"DOUBLE_SHARP"
			],
			[
				"DOUBLE",
				"DOUBLE_SHARP"
			],
			[
				"Syst",
				"SystemLayoutInfo"
			],
			[
				"M",
				"FileMediatorFactory"
			],
			[
				"globa",
				"globalTicksPerQuarter"
			],
			[
				"Time",
				"TimeSignatureSymbol"
			],
			[
				"new_",
				"new_identifier"
			],
			[
				"attribute",
				"attributes_classes"
			],
			[
				"attrib",
				"attributes_classes"
			],
			[
				"fro",
				"from_xelement_code"
			],
			[
				"par",
				"parsing_statement"
			],
			[
				"hmem",
				"hmembers"
			],
			[
				"type",
				"type_capture"
			],
			[
				"name",
				"name_capture"
			],
			[
				"hlines",
				"hlines_last_member"
			],
			[
				"elision",
				"elisionSyllabicTextGroup"
			],
			[
				"XEleme",
				"XElementIterator"
			],
			[
				"do",
				"doDecrementIter"
			],
			[
				"eleme",
				"element_name"
			],
			[
				"is_",
				"is_required"
			],
			[
				"element_na",
				"element_name_for_cpp"
			],
			[
				"Ele",
				"ElementInterface"
			],
			[
				"line",
				"line_instruction"
			],
			[
				"line_info",
				"line_info_collection"
			],
			[
				"all_",
				"all_symbols"
			],
			[
				"all",
				"all_classes"
			],
			[
				"require",
				"require_relative"
			],
			[
				"cpp",
				"cpp_functions"
			],
			[
				"req",
				"require_relative"
			],
			[
				"enum",
				"enum_list"
			],
			[
				"for",
				"forwardDeclare"
			],
			[
				"decl",
				"declaration_line"
			],
			[
				"line_in",
				"temp_line_instructions"
			],
			[
				"end",
				"end_line"
			],
			[
				"is",
				"inherits_from"
			],
			[
				"H",
				"HDeclarationLine"
			],
			[
				"matc",
				"matches"
			]
		]
	},
	"buffers":
	[
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: Install Package",
		"selected_items":
		[
			[
				"Package Control: Install Package",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ClassifierLabels.h",
		"/Users/mjb/komp/Classes/Trainer/TrainerBridge.h",
		"/Users/mjb/komp/Classes/Trainer/TrainerBridge.mm",
		"/Users/mjb/komp/Classes/Trainer/TrainerItemsTableViewController.swift",
		"/Users/mjb/komp/Resources/Classifier/Classifier/notation.labels",
		"/Users/mjb/komp/Resources/Localizable.strings",
		"/Users/mjb/komp/Resources/Fonts/gootville/glyphnames.json",
		"/Users/mjb/komp/Resources/Fonts/bravura-1.18/glyphnames.json",
		"/Users/mjb/Google Drive/Documents/Training/JSON/notation_all.json",
		"/Users/mjb/komp/Classes/AppDelegate.swift",
		"/Users/mjb/komp/Classes/Configurator/ConfiguratorViewController.swift",
		"/Users/mjb/komp/Classes/PropertiesMenuController.mm",
		"/Users/mjb/komp/Classes/RadialPropertiesMenusModel.mm",
		"/Users/mjb/komp/Classes/Trainer/TrainerPageViewController.swift",
		"/Users/mjb/komp/Classes/Trainer/TrainerViewController.swift",
		"/Users/mjb/komp/Resources/Classifier/Classifier/notation.config",
		"/Users/mjb/Google Drive/Documents/Training/JSON/notation.strokes",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ClassificationType.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ClassificationResult.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/NotationClassifier.cc",
		"/Users/mjb/Google Drive/Documents/Training/JSON/notation.config",
		"/Users/mjb/komp/Resources/Classifier/README",
		"/Users/mjb/komp/Resources/Classifier/Classifier/notation.model",
		"/Users/mjb/komp/Resources/Classifier/Classifier.data",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/NotationClassifier.h",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Entropy C++ File.xctemplate/WithHeader/___FILEBASENAME___.cpp",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Entropy C++ File.xctemplate/WithHeader/___FILEBASENAME___.h",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Entropy C++ File.xctemplate copy/TemplateInfo.plist",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Entropy C++ File.xctemplate copy/Default/___FILEBASENAME___.cpp",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Entropy C++ File.xctemplate copy/WithHeader/___FILEBASENAME___.cpp",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Entropy C++ File.xctemplate copy/WithHeader/___FILEBASENAME___.h",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Komp C++ File.xctemplate/TemplateInfo.plist",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Komp C++ File.xctemplate/WithHeader/___FILEBASENAME___.hpp",
		"/Users/mjb/komp/Notation/Notation-Sourcecode/Notation/Beaming/BeamIntf.h",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Komp C++ File.xctemplate/WithHeader/___FILEBASENAME___.cpp",
		"/Users/mjb/Library/Developer/Xcode/Templates/File Templates/Source/Komp C++ File.xctemplate/Default/___FILEBASENAME___.cc",
		"/Users/mjb/komp/Classes/TemporalRadialMenu.h",
		"/Users/mjb/komp/Classes/BarlineContextualMenuViewController.h",
		"/Users/mjb/komp/Classes/CircleOfFifthsController.h",
		"/Users/mjb/komp/Classes/ClefContextualMenuViewController.h",
		"/Users/mjb/komp/Classes/InstrumentPickerViewController.h",
		"/Users/mjb/komp/Classes/MeasureButtonsView.h",
		"/Users/mjb/komp/Classes/MeasureMenuView.h",
		"/Users/mjb/komp/Classes/MeasurePreviewView.h",
		"/Users/mjb/komp/Classes/MenuManager.h",
		"/Users/mjb/komp/Classes/ScoreBuilderSettingsViewController.h",
		"/Users/mjb/komp/Classes/ScoreDocument.h",
		"/Users/mjb/komp/Classes/ScoreView.h",
		"/Users/mjb/komp/Classes/ScoreView.mm",
		"/Users/mjb/komp/Classes/SelectedInstrumentTableViewController.h",
		"/Users/mjb/komp/Classes/TempoContextualMenuViewController.h",
		"/Users/mjb/komp/Classes/TempoMenuViewController.h",
		"/Users/mjb/komp/Classes/TimeSignatureContextualMenuViewController.h",
		"/Users/mjb/komp/Classes/TimeSignatureMenuViewController.h",
		"/Users/mjb/komp/Classes/TupletContextualMenuViewController.h",
		"/Users/mjb/komp/Kern/Kern-include/kern/TargetOs.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/BeamStrokeAnalyzer.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/BeamStrokeAnalyzer.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/BeamStrokeData.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/BeamStrokeData.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/BezierRasterizer.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/BezierRasterizer.mm",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ClassifierTypes.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ClassifierTypes.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/FeatureExtractor.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/FeatureExtractor.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ImageUtils.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/ImageUtils.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/Line.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/Line.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/Merlin.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/Merlin.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/NoteHandler.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/NoteHandler.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/StrokeHandler.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/StrokeHandler.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/StrokeInfo.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Classifier/StrokeInfo.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAArrow.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAArrow.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MABeamBridge.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MABeamBridge.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MACircle.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MACircle.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MACommand.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MACommand.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MACurve.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MACurve.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MADelete.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MADelete.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MADiamond.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MADiamond.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAEllipse.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAEllipse.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAEvaluate.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAEvaluate.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFeatures.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFeatures.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFunction.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFunction.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFuzzyNode.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFuzzyNode.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFuzzySet.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAFuzzySet.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAGesture.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MALine.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MALine.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAPolygon.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAPolygon.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MARecognizer.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MARecognizer.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MARectangle.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MARectangle.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAScribble.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAScribble.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAShape.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAShape.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAStroke.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAStroke.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MATap.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MATap.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MATriangle.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MATriangle.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAUnknown.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAUnknown.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAVector.cc",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAVector.h",
		"/Users/mjb/komp/Merlin/Merlin-Sourcecode/Morpho/MAWavyLine.cc"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 114.0,
		"where_history":
		[
			"<open files>",
			"/Users/mjb/komp,,<current file>",
			"/Users/mjb/komp,/Users/mjb/Google Drive/Documents/Training",
			"/Users/mjb/komp",
			"/Users/mjb/komp/Classes",
			"/Users/mjb/komp/Merlin/Merlin-Sourcecode",
			"<open files>",
			"",
			"/Users/mjb/komp/Classifier",
			"/Users/mjb/komp/Frameworks/Notation/Source",
			"/Users/mjb/komp,*.cc,*.h",
			"/Users/mjb/komp/Frameworks/Notation/Source",
			"/Users/mjb/komp/Frameworks/Notation",
			"/Users/mjb/komp/Classifier/Tests,*.cc",
			"/Users/mjb/komp/Classifier/Tests/*.cc",
			"/Users/mjb/komp/Classifier/Tests",
			"/Users/mjb/komp",
			"/Users/mjb/komp/Frameworks/Notation/Source/Commands",
			"<open files>",
			"/Users/mjb/Dropbox/Programming/MusicXML-Fork",
			"/Users/mjb/Dropbox/Programming/MusicXML-Repo",
			"/Users/mjb/Dropbox/Programming/MxRepo",
			"/Users/mjb/komp",
			"/Users/mjb/Dropbox/Programming/MxRepo",
			"/Users/mjb/komp/Frameworks/Notation/Source",
			"/Users/mjb/Dropbox/Programming/MxRepo/Resources/expected",
			"/Users/mjb/komp/Frameworks/Notation/Source",
			"<open files>",
			"/Users/mjb/komp/Frameworks/MxSource/mx",
			"/Users/mjb/Google Drive/komp/Frameworks/MxSource/mx",
			"/Users/mjb/Google Drive/komp/Frameworks/MxSource/mxmy",
			"/Users/mjb/Dropbox/Programming/MxRepo/Sourcecode/mx",
			"<open files>,/Users/mjb/Dropbox/Programming/MxRepo/Sourcecode/mx",
			"<open files>",
			"",
			"/Users/mjb/Dropbox/Programming/MxRepo/Sourcecode/mx/core/elements/*.cpp",
			"/Users/mjb/Dropbox/Programming/MxRepo/DevScripts",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ClassificationType::",
			"White-Note",
			"\"White-Note\"",
			"\"UNKNOWN\"",
			"\"Unknown\"",
			"\"Cut-Time\"",
			"\"Common-Time\"",
			"\"Stem\"",
			"\"Whole-Half-Rest\"",
			"\"Whole-Rest\"",
			"\"Half-Rest\"",
			"\"Rest-Half\"",
			"\"HALF_REST\"",
			"\"Sixty-Four-Rest\"",
			"\"TSixty-Four-Rest\"",
			"\"Thirty-Two-Rest\"",
			"\"Sixteenth-Rest\"",
			"\"Quarter-Rest\"",
			"\"Eighth-Rest\"",
			"\"0\"",
			"\"Whole-Note\"",
			"\"Thirty-Two-Note-Stem-Down\"",
			"\"Thirty-Two-Note-Stem-Up\"",
			"\"Thirty-Two-Note-Up\"",
			"\"Thirty-Two-Note-Down\"",
			"\"Sixty-Four-Note-Stem-Down\"",
			"\"Sixty-Four-Note-Stem-Up\"",
			"\"Sixty-Four-Note-Up\"",
			"\"Sixty-Four-Note-Down\"",
			"\"COMMAND\"",
			"\"Sixteenth-Note-Stem-Down\"",
			"\"Sixteenth-Note-Stem-Up\"",
			"\"Sixteenth-Note-Up\"",
			"\"Sixteenth-Note-Down\"",
			"\"Note-Stem\"",
			"\"Raw-Note\"",
			"\"Quarter-Note-Up\"",
			"\"Quarter-Note-Down\"",
			"\"Half-Note-Up\"",
			"\"Half-Note-Down\"",
			"\"Eighth-Note-Stem-Up\"",
			"\"Eighth-Note-Stem-Down\"",
			"\"Eighth-Note-Up\"",
			"\"Eighth-Note-Down\"",
			"\"Dot\"",
			"\"Line\"",
			"\"Flag\"",
			"\"Ellipse\"",
			"\"Curve-Below\"",
			"\"Curve-Above\"",
			"\"Curve\"",
			"COMMAND_SELECT",
			"\"Select\"",
			"COMMAND_DOT",
			"\"Tap\"",
			"\"Delete\"",
			"\"Command-Delete\"",
			"\"Command\"",
			"\"Circle\"",
			"\"G-Clef\"",
			"\"F-Clef\"",
			"\"C-Clef\"",
			"\"Beam-Bridge\"",
			"\"Barline\"",
			"\"Sharp\"",
			"\"Natural\"",
			"\"Flat\"",
			"Double-Sharp",
			"\"Double-Sharp\"",
			"Double-Sharp",
			"FILEBASENAME",
			"#import \"Forward.h\"",
			"namespace komp",
			"MxiOS.framework",
			"../mx",
			"Notation",
			"<backup>",
			" /",
			".Framework",
			".framework",
			"NotationOSX/NotationOSX_Prefix.pch",
			"NotationiOS/NotationiOS_Prefix.pch",
			"NotationOSX/NotationOSX_Prefix.pch",
			"NotationiOS/NotationiOS_Prefix.pch",
			"KompImage+OpenCV.mm",
			"KompImage+OpenCV.h",
			"midi",
			"tenor",
			"bass",
			"alto",
			"treble",
			"KOMP",
			"// MusicXML Class Library\n// Copyright (c) by Matthew James Briggs\n// Distributed under the MIT License",
			"MxmacOS",
			"Classifier/",
			"Classifier/Komp.entitlements",
			"<voice>2</voice>",
			"SWIFT_ACTIVE_COMPILATION_CONDITIONS",
			"wedge",
			"<measure number=\"42\" width=\"91\" />",
			" ",
			"    ",
			"semitone",
			"sixteenth",
			"characterKey",
			"..",
			"doit",
			"lift",
			"closed",
			"echnical",
			"\"tremolo-marks\"",
			"Tremolo",
			"\"tremolo\"",
			"tremolo-marks",
			"tremolo",
			"p/>",
			"<p/>",
			"\"pedal\"",
			"\"ped",
			"group-barline",
			"group-barline-value",
			"layout()",
			"\"upright-inverted\"",
			"\n\n",
			"        <direction-type>\n          \n        </direction-type>",
			"<wedge.*/>",
			"<wedge*./>",
			"        <notations>\n          \n        </notations>"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"NOTE_WHITE",
			"\"NOTE_WHITE\"",
			"\"LABEL_UNKNOWN\"",
			"\"UNKNOWN\"",
			"\"TIME_CUT\"",
			"\"TIME_COMMON\"",
			"\"NOTE_STEM2\"",
			"\"REST_WHOLE_HALF\"",
			"\"REST_WHOLE\"",
			"\"REST_HALF\"",
			"\"REST_SIXTY_FOUR\"",
			"\"REST_THIRTY_TWO\"",
			"\"REST_SIXTEENTH\"",
			"\"REST_QUARTER\"",
			"\"REST_EIGHTH\"",
			"\"NUMBER_0\"",
			"\"NOTE_WHOLE\"",
			"\"NOTE_THIRTY_TWO_STEM_DOWN\"",
			"\"NOTE_THIRTY_TWO_STEM_UP\"",
			"\"NOTE_THIRTY_TWO_UP\"",
			"\"NOTE_THIRTY_TWO_DOWN\"",
			"\"NOTE_SIXTY_FOUR_STEM_DOWN\"",
			"\"NOTE_SIXTY_FOUR_STEM_UP\"",
			"\"NOTE_SIXTY_FOUR_UP\"",
			"\"NOTE_SIXTY_FOUR_DOWN\"",
			"\"COMMAND_GENERIC\"",
			"\"NOTE_SIXTEENTH_STEM_DOWN\"",
			"\"NOTE_SIXTEENTH_STEM_UP\"",
			"\"NOTE_SIXTEENTH_UP\"",
			"\"NOTE_SIXTEENTH_DOWN\"",
			"\"NOTE_STEM\"",
			"\"NOTE_RAW\"",
			"\"NOTE_QUARTER_UP\"",
			"\"NOTE_QUARTER_DOWN\"",
			"\"NOTE_HALF_UP\"",
			"\"NOTE_HALF_DOWN\"",
			"\"NOTE_EIGHTH_STEM_UP\"",
			"\"NOTE_EIGHTH_STEM_DOWN\"",
			"\"NOTE_EIGHTH_UP\"",
			"\"NOTE_EIGHTH_DOWN\"",
			"\"MARK_DOT\"",
			"\"SHAPE_LINE\"",
			"\"NOTE_FLAG\"",
			"\"SHAPE_ELLIPSE\"",
			"\"SHAPE_CURVE_BELOW\"",
			"\"SHAPE_CURVE_ABOVE\"",
			"\"SHAPE_CURVE_BOTH\"",
			"COMMAND_SELECT",
			"COMMAND_TAP",
			"\"COMMAND_TAP\"",
			"\"COMMAND_DELETE\"",
			"\"COMMAND\"",
			"\"SHAPE_CIRCLE\"",
			"\"CLEF_G\"",
			"\"CLEF_F\"",
			"\"CLEF_C\"",
			"\"BEAM_BRIDGE\"",
			"\"BARLINE\"",
			"\"ACCIDENTAL_SHARP\"",
			"\"ACCIDENTAL_NATURAL\"",
			"\"ACCIDENTAL_FLAT\"",
			"ACCIDENTAL_DOUBLE_SHARP",
			"#import \"Forward.h\"\n#import \"ClassifierType.h\"",
			"namespace merlin",
			"Merlin-OSX/Merlin-OSX-Prefix.pch",
			"Merlin-iOS/Merlin-iOS-Prefix.pch",
			"MerlinOSX/MerlinOSX-prefix.pch",
			"MerliniOS/MerliniOS-prefix.pch",
			"TENOR",
			"BASS",
			"ALTO",
			"TREBLE",
			"ENTROPY",
			"// Copyright (c) Matthew James Briggs",
			"TestAppOsx/App/",
			"TestAppOsx/Komp.entitlements",
			"  ",
			" ",
			"",
			"<voice>1</voice>",
			"\n    , mCache{}",
			"\n        DrawResultCache mCache;",
			"",
			"#if defined KOMP_ENABLE_ALL_TESTS || defined KOMP_ENABLE_THESE_TESTS\n{\n    using namespace komp;\n",
			"#if defined KOMP_ENABLE_ALL_TESTS || defined KOMP_ENABLE_THESE_TESTS\n    using namespace komp;",
			"#endif\n}\n\n// Semitone Inc. Confidential Information.\n// TM and (c) 2016-present Semitone Inc.  All Rights Reserved.\n// Reproduction in whole or in part without prior written permission of a\n// duly authorized representative is prohibited.",
			"//#define KOMP_ENABLE_THESE_TESTS\n#if defined KOMP_ENABLE_ALL_TESTS || defined KOMP_ENABLE_THESE_TESTS",
			"namespace komp\n{\n//#define KOMP_ENABLE_THESE_TESTS\n#if defined KOMP_ENABLE_ALL_TESTS || defined KOMP_ENABLE_THESE_TESTS",
			"#include \"cpul/cpulTestHarness.h\"\n#include \"TestControl.h\"\n",
			"#include \"cpul/cpulTestHarness.h\"\n#include \"TestControl.h\"",
			"::redo()\n    {\n        KOMP_LOG_COMMAND\n        ",
			"::undo()\n    {\n        KOMP_LOG_COMMAND\n        ",
			"::execute()\n    {\n        KOMP_LOG_COMMAND\n        ",
			"</measure>\n    <measure ",
			"",
			"ChordStateCommand",
			"attribute",
			"",
			">\n</measure>",
			"",
			"\n    </measure>",
			"",
			"The tied element represents",
			"This can also be done if",
			"indicate a note should",
			"codas.",
			"It is not recommended",
			"tied-type",
			" = komp::Point{2",
			"}",
			", ",
			"{",
			"Stem::",
			"override final;",
			" override final;",
			"mSpaceTimePoint",
			"XXXX::",
			"Text",
			"",
			"override;",
			"Drawable",
			"// MusicXML Class Library\n// Copyright (c) by Matthew James Briggs\n// Distributed under the MIT License",
			"Tuplet",
			"MeasureLocation",
			"",
			"Accidental",
			"",
			"DeleteCurveCommand"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 105.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Ruby/Ruby.sublime-build",
	"project": "Entropy.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"classifierlabels",
				"komp/Merlin/Merlin-Sourcecode/Classifier/ClassifierLabels.h"
			],
			[
				"notationclass",
				"komp/Merlin/Merlin-Sourcecode/Classifier/NotationClassifier.cc"
			],
			[
				"traineritemstable",
				"komp/Classes/Trainer/TrainerItemsTableViewController.swift"
			],
			[
				"trainerbr",
				"komp/Classes/Trainer/TrainerBridge.mm"
			],
			[
				"trainerb",
				"komp/Classes/Trainer/TrainerBridge.h"
			],
			[
				"",
				"komp/Merlin/Merlin-Sourcecode/Classifier/NotationClassifier.h"
			],
			[
				"notationclassifier",
				"komp/Merlin/Merlin-Sourcecode/Classifier/NotationClassifier.cc"
			],
			[
				"classificationresult",
				"komp/Merlin/Merlin-Sourcecode/Classifier/ClassificationResult.h"
			],
			[
				"classificationt",
				"komp/Merlin/Merlin-Sourcecode/Classifier/ClassificationType.h"
			],
			[
				"beamin",
				"komp/Notation/Notation-Sourcecode/Notation/Beaming/BeamIntf.h"
			],
			[
				"notationc",
				"komp/Merlin/Merlin-Sourcecode/Classifier/NotationClassifier.cc"
			],
			[
				"targetos",
				"komp/Kern/Kern-include/kern/TargetOs.h"
			],
			[
				"version",
				"komp/Komp/Build/version.rb"
			],
			[
				"ezinar.xml",
				"komp/Resources/Documents/TestScores/Ezinar.xml"
			],
			[
				"alament",
				"komp/Resources/Documents/Scores/A Lament.xml"
			],
			[
				"liftoff",
				"komp/Resources/Documents/Scores/Liftoff.xml"
			],
			[
				"generalm",
				"komp/Resources/Documents/DevNotes/GeneralMidiReference.txt"
			],
			[
				"scoreviewcocoa",
				"komp/TestAppOSX/App/ScoreViewCocoa.mm"
			],
			[
				"appdelegate.mm",
				"komp/TestAppOSX/App/AppDelegate.mm"
			],
			[
				"appdelegate",
				"komp/Classes/AppDelegate.mm"
			],
			[
				"notation.pbx",
				"komp/Frameworks/Notation/Notation.xcodeproj/project.pbxproj"
			],
			[
				"musicxml.x",
				"MxRepo/Documents/musicxml.xsd"
			],
			[
				"beamm",
				"komp/Frameworks/Notation/Source/Notation/Beaming/BeamMember.h"
			],
			[
				"throw",
				"komp/Frameworks/Notation/Source/Core/Throw.h"
			],
			[
				"documentmanager",
				"MxRepo/Sourcecode/mx/api/DocumentManager.cpp"
			],
			[
				"notedata",
				"MxRepo/Sourcecode/mx/api/NoteData.h"
			],
			[
				"voicedata",
				"MxRepo/Sourcecode/mx/api/VoiceData.h"
			],
			[
				"staffdata",
				"MxRepo/Sourcecode/mx/api/StaffData.h"
			],
			[
				"measuredata",
				"MxRepo/Sourcecode/mx/api/MeasureData.h"
			],
			[
				"partdata",
				"MxRepo/Sourcecode/mx/api/PartData.h"
			],
			[
				"markdata",
				"MxRepo/Sourcecode/mx/api/MarkData.h"
			],
			[
				"directiondata",
				"MxRepo/Sourcecode/mx/api/DirectionData.h"
			],
			[
				"directionsdatatest",
				"MxRepo/Sourcecode/mxtest/api/DirectionsDataTest.cpp"
			],
			[
				".rb",
				"komp/Komp/Build/version.rb"
			],
			[
				"komp.pb",
				"komp/Komp.xcodeproj/project.pbxproj"
			],
			[
				"mxstaffwr",
				"komp/Frameworks/Notation/Source/MusicXML/MxStaffWriter.cc"
			],
			[
				"mxscorewriter",
				"komp/Frameworks/Notation/Source/MusicXML/MxScoreWriter.cc"
			],
			[
				"mxnotewr",
				"komp/Frameworks/Notation/Source/MusicXML/MxNoteWriter.cc"
			],
			[
				"mxdynamicsr",
				"komp/Frameworks/Notation/Source/MusicXML/MxDynamicsReader.cc"
			],
			[
				"mxconverter.cc",
				"komp/Frameworks/Notation/Source/MusicXML/MxConverter.cc"
			],
			[
				"wacheta",
				"komp/Resources/Documents/Scores/Wachet auf.xml"
			],
			[
				"ezinar",
				"komp/Resources/Documents/Scores/Ezinar.xml"
			],
			[
				"hayd",
				"komp/Resources/Documents/Scores/Haydn Op 74 No 1 Excerpt.xml"
			],
			[
				"generalmidi",
				"komp/Resources/Documents/DevNotes/GeneralMidiReference.txt"
			],
			[
				"instrum",
				"komp/Resources/Config/instruments.json"
			],
			[
				"wachet",
				"komp/Resources/Documents/Scores/Wachet auf.xml"
			],
			[
				"rect",
				"komp/Frameworks/Notation/Source/Notation/Rect.h"
			],
			[
				"beam.cc",
				"komp/Frameworks/Notation/Source/Notation/Beaming/Beam.cc"
			],
			[
				"item.h",
				"komp/Frameworks/Notation/Source/Notation/Items/Item.h"
			],
			[
				"tempomark",
				"komp/Frameworks/Notation/Source/Notation/Items/TempoMark.h"
			],
			[
				"keysignature.h",
				"komp/Frameworks/Notation/Source/Notation/Items/KeySignature.h"
			],
			[
				"commandfac",
				"komp/Frameworks/Notation/Source/Commands/CommandFactory.h"
			],
			[
				"roadm",
				"komp/Resources/Documents/Product/Things to add to the Roadmap.txt"
			],
			[
				"waltz",
				"komp/Resources/Documents/Scores/Waltz.xml"
			],
			[
				"haydn",
				"komp/Resources/Documents/Scores/Haydn Op 74 No 1 Excerpt.xml"
			],
			[
				"stringq",
				"komp/Resources/Documents/Scores/String Quartet No. 57 in C Major Op. 74 No. 1 Movement 1.xml"
			],
			[
				"freezin",
				"MxRepo/Resources/mjbsuite/freezing.xml"
			],
			[
				"xdoc",
				"MxRepo/Sourcecode/mx/xml/PugiDoc.cpp"
			],
			[
				"bombe.xml",
				"MxRepo/Resources/ksuite/Bombe.xml"
			],
			[
				"markimpl.h",
				"komp/Frameworks/Notation/Source/Notation/Items/MarkImpl.h"
			],
			[
				"mark.cc",
				"komp/Frameworks/Notation/Source/Notation/Items/Mark.cc"
			],
			[
				"lame",
				"komp/Resources/Documents/DevNotes/lame.cpp"
			],
			[
				"k008d",
				"komp/Resources/Documents/musicxml/semitone/k008d_One_Flagged_Note.xml"
			],
			[
				"fontma",
				"komp/Frameworks/Notation/Source/Fonts/FontManager.mm"
			],
			[
				"notationswriter",
				"MxRepo/Sourcecode/mx/impl/NotationsWriter.cpp"
			],
			[
				"technicalchoi",
				"MxRepo/Sourcecode/mx/core/elements/TechnicalChoice.cpp"
			],
			[
				"converter.",
				"MxRepo/Sourcecode/mx/impl/Converter.h"
			],
			[
				"markdata.cpp",
				"MxRepo/Sourcecode/mx/api/MarkData.cpp"
			],
			[
				"technicalc",
				"MxRepo/Sourcecode/mx/core/elements/TechnicalChoice.h"
			],
			[
				"technical",
				"MxRepo/Sourcecode/mx/core/elements/Technical.h"
			],
			[
				"notationsc",
				"MxRepo/Sourcecode/mx/core/elements/NotationsChoice.h"
			],
			[
				"wordsattr",
				"MxRepo/Sourcecode/mx/core/elements/WordsAttributes.h"
			],
			[
				"words",
				"MxRepo/Sourcecode/mx/core/elements/Words.h"
			],
			[
				"colordata",
				"MxRepo/Sourcecode/mx/api/ColorData.h"
			],
			[
				"fontdata",
				"MxRepo/Sourcecode/mx/api/FontData.h"
			],
			[
				"directiontype",
				"MxRepo/Sourcecode/mx/core/elements/DirectionType.h"
			],
			[
				"notationsch",
				"MxRepo/Sourcecode/mx/core/elements/NotationsChoice.h"
			],
			[
				"musicxml.xsd",
				"MxRepo/Documents/musicxml.xsd"
			],
			[
				"mxconv",
				"komp/Frameworks/Notation/Source/MusicXML/MxConverter.cc"
			],
			[
				"fonttheme",
				"komp/Frameworks/Notation/Source/Fonts/FontTheme.mm"
			],
			[
				"markt",
				"komp/Frameworks/Notation/Source/Notation/MarkType.h"
			],
			[
				"apie",
				"MxRepo/Sourcecode/mx/api/ApiEquality.h"
			],
			[
				"1.xml",
				"komp/Resources/Documents/musicxml/semitone/1.xml"
			],
			[
				"measurewr",
				"MxRepo/Sourcecode/mx/impl/MeasureWriter.cpp"
			],
			[
				"mxscorerea",
				"komp/Frameworks/Notation/Source/MusicXML/MxScoreReader.cc"
			],
			[
				"43e",
				"MxRepo/Resources/lysuite/ly43e_Multistaff_ClefDynamics.xml"
			],
			[
				"markd",
				"MxRepo/Sourcecode/mx/api/MarkData.h"
			],
			[
				"directionw",
				"MxRepo/Sourcecode/mx/impl/DirectionWriter.cpp"
			],
			[
				"notewr",
				"MxRepo/Sourcecode/mx/impl/NoteWriter.cpp"
			],
			[
				"markdataf",
				"MxRepo/Sourcecode/mx/impl/MarkDataFunctions.h"
			],
			[
				"musicxml.xs",
				"MxRepo/Documents/musicxml.xsd"
			],
			[
				"fontt",
				"komp/Frameworks/Notation/Source/Fonts/FontTheme.mm"
			],
			[
				"ornamentsch",
				"MxRepo/Sourcecode/mx/core/elements/OrnamentsChoice.cpp"
			],
			[
				"policy",
				"komp/Frameworks/Notation/Source/Notation/Policy.h"
			],
			[
				"stempol",
				"komp/Frameworks/Notation/Source/Notation/Items/StemPolicy.h"
			],
			[
				"fermatapla",
				"komp/Frameworks/Notation/Source/Notation/MarkPlacement/FermataPlacement.cc"
			],
			[
				"mxdepl",
				"MxRepo/DevScripts/mxdeploy.rb"
			],
			[
				"systembracke",
				"komp/Frameworks/Notation/Source/Notation/SystemBracket.h"
			],
			[
				"partgroupdata",
				"MxRepo/Sourcecode/mx/api/PartGroupData.h"
			],
			[
				"systembracket",
				"komp/Frameworks/Notation/Source/Notation/SystemBracket.h"
			],
			[
				"mxscorewr",
				"komp/Frameworks/Notation/Source/MusicXML/MxScoreWriter.cc"
			],
			[
				"markdata.cc",
				"komp/Frameworks/Notation/Source/Notation/MarkData.cc"
			],
			[
				"mxscorereader.cc",
				"komp/Frameworks/Notation/Source/MusicXML/MxScoreReader.cc"
			],
			[
				"fermatas2",
				"komp/Resources/Documents/Scores/Fermatas2.xml"
			],
			[
				"fermatas.xml",
				"komp/Resources/Documents/Scores/Fermatas.xml"
			],
			[
				"decimals",
				"MxRepo/Sourcecode/mx/core/Decimals.h"
			],
			[
				"articulations",
				"komp/Resources/Documents/Scores/Articulations.xml"
			],
			[
				"octoberxl",
				"MxRepo/Resources/mjbsuite/OctoberXML.xml"
			],
			[
				"versioncon",
				"komp/Frameworks/Notation/Source/Core/VersionConstants.h"
			],
			[
				"version.r",
				"komp/Komp/Build/version.rb"
			],
			[
				"version.",
				"MxRepo/DevScripts/version.rb"
			],
			[
				"bombe",
				"komp/Resources/Documents/Scores/Bombe.xml"
			],
			[
				"drawres",
				"komp/Frameworks/Notation/Source/Notation/Drawable/DrawResultCache.h"
			],
			[
				"drawresult",
				"komp/Frameworks/Notation/Source/Notation/DrawResult.h"
			],
			[
				"drawable",
				"komp/Frameworks/Notation/Source/Core/Drawable.h"
			],
			[
				"chord.cc",
				"komp/Frameworks/Notation/Source/Notation/Items/Chord.cc"
			],
			[
				"rest.cc",
				"komp/Frameworks/Notation/Source/Notation/Items/Rest.cc"
			],
			[
				"note.cc",
				"komp/Frameworks/Notation/Source/Notation/Items/Note.cc"
			],
			[
				"measure.cc",
				"komp/Frameworks/Notation/Source/Notation/Measure.cc"
			],
			[
				"forward.h",
				"komp/Frameworks/Notation/Source/Core/Forward.h"
			],
			[
				"deletetupletcom",
				"komp/Frameworks/Notation/Source/Commands/DeleteTupletCommand.h"
			],
			[
				"deletetupletcomm",
				"komp/Frameworks/Notation/Source/Commands/DeleteTupletCommand.cc"
			],
			[
				"deleteitemsc",
				"komp/Frameworks/Notation/Source/Commands/DeleteItemsCommand.cc"
			],
			[
				"podf",
				"komp/Podfile"
			],
			[
				"itemstatecomm",
				"komp/Frameworks/Notation/Source/Commands/ItemStateCommand.cc"
			],
			[
				"itemstatec",
				"komp/Frameworks/Notation/Source/Commands/ItemStateCommand.h"
			],
			[
				"crazyh",
				"komp/Resources/Documents/musicxml/semitone/Crazy Head Flippage.xml"
			],
			[
				"chordtest",
				"komp/Classifier/Tests/ChordTest.cc"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
